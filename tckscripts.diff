diff --git a/jenkins/benchmarks/dacapo.sh b/jenkins/benchmarks/dacapo.sh
index a7b82d66..d7ab1f2b 100644
--- a/jenkins/benchmarks/dacapo.sh
+++ b/jenkins/benchmarks/dacapo.sh
@@ -48,7 +48,7 @@ if [ "$JDK_MAJOR" -ge "16" ] ; then
   export JAVA_TOOL_OPTIONS="$JAVA_TOOL_OPTIONS --add-opens=java.base/java.lang=ALL-UNNAMED"
 fi
 
-readonly REPORT_DIR="dacapo-report"
+readonly REPORT_DIR="results"
 rm -rf ${REPORT_DIR}
 mkdir ${REPORT_DIR}
 . $SCRIPT_DIR/../settings-source.sh "${BASH_SOURCE[@]}"
@@ -66,7 +66,7 @@ MEM_R=$( printf %.0f $(echo "$MEM_90P / 2" | bc -l) )
     MEM_90P=1500
   fi
 MEM_R=${MEM_R}M
-MEM=${MEM_90P}M
+MEM=4096M
 
 function runSuite() {
   SUITE=${1}
@@ -84,7 +84,7 @@ function runSuite() {
 }
 
 ## get all suites
-SUITES=($( $JAVA -jar $DACAPO_JAR -l | grep -v -e "Started recording"  -e "copy recording data to file"  -e "^$"  -e "\[" || true))
+SUITES=($( $JAVA -jar $DACAPO_JAR -l | grep -v -e "Started recording"  -e "copy recording data to file"  -e "^$"  -e "\[" | sed "s/batik//" | sed "s/h2//" | sed "s/eclipse//" | sed "s/tomcat//" | sed "s/tradesoap//" || true))
 
 set +x
 
@@ -95,10 +95,10 @@ geomCount=0
 for SUITE in ${SUITES[@]}; do
   #trim trailing whitespace from SUITE
   SUITE="${SUITE%"${SUITE##*[![:space:]]}"}"
-  echo "running [${SUITE}] ... "
+  echo "`date` running [${SUITE}] ... "
   SUITE_LOG=${REPORT_DIR}/${SUITE}.log
   RESULT=$( runSuite ${SUITE} ${SUITE_LOG} )
-  echo "... ${RESULT}ms"
+  echo "`date` ... ${RESULT}ms"
   echo "${SUITE}=${RESULT}" >> ${REPORT_DIR}/summary.txt
   if [ ${RESULT} -gt 0 ] ; then
     geomMsumm=`echo "$geomMsumm*${RESULT}" | bc -l`
@@ -114,4 +114,4 @@ fi
 geom=`echo "e(l($geomMsumm)/$geomCount)" |  bc -l | sed "s/\..*//"`
 echo "geom=$geom" >> ${REPORT_DIR}/summary.txt
 
-sh -x  $SCRIPT_DIR/decapoStatisticGatherer.sh ${REPORT_DIR}/summary.txt  2>${REPORT_DIR}/decapoStatisticGatherer.err.log  > ${REPORT_DIR}/summary-normalized.txt || true
+#sh -x  $SCRIPT_DIR/decapoStatisticGatherer.sh ${REPORT_DIR}/summary.txt  2>${REPORT_DIR}/decapoStatisticGatherer.err.log  > ${REPORT_DIR}/summary-normalized.txt || true
diff --git a/jenkins/benchmarks/radargun/dist-sync_template.xml b/jenkins/benchmarks/radargun/dist-sync_template.xml
index 7d7c1471..1781f90f 100644
--- a/jenkins/benchmarks/radargun/dist-sync_template.xml
+++ b/jenkins/benchmarks/radargun/dist-sync_template.xml
@@ -1,8 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 
 <infinispan
-        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-        xsi:schemaLocation="urn:infinispan:config:8.0 http://www.infinispan.org/schemas/infinispan-config-8.0.xsd"
         xmlns="urn:infinispan:config:9.0">
     <jgroups>
         <stack-file name="jgroupsStack" path="default-configs/default-jgroups-udp.xml"/>
diff --git a/jenkins/benchmarks/radargun/quickstart-radargun.sh b/jenkins/benchmarks/radargun/quickstart-radargun.sh
index f321890b..edcff8f8 100644
--- a/jenkins/benchmarks/radargun/quickstart-radargun.sh
+++ b/jenkins/benchmarks/radargun/quickstart-radargun.sh
@@ -30,7 +30,7 @@ fi
 
 SLAVES=${1}
 VERIFY_SENTENCE=${2}
-THREADS=30
+THREADS=12
 
 # calculate 90% of memory in MB and save it in java friendly format
 MEM_90P=$( sh ${SCRIPT_DIR}/../calcMemoryPercentage.sh )
@@ -40,6 +40,7 @@ fi
 if [ "x$OTOOL_BUILD_ARCH" = "xi686" ] ; then
     MEM_90P=1500
 fi
+MEM_90P=4096
 MEM_PER_SLAVE=$( printf %.0f $(echo "$MEM_90P / $SLAVES" | bc -l) )
 MEM_PER_SLAVE=${MEM_PER_SLAVE}M
 
diff --git a/jenkins/benchmarks/radargun/radargun.sh b/jenkins/benchmarks/radargun/radargun.sh
index 1b1e9d14..695b20da 100644
--- a/jenkins/benchmarks/radargun/radargun.sh
+++ b/jenkins/benchmarks/radargun/radargun.sh
@@ -25,6 +25,8 @@ set -x
 set -e
 set -o pipefail
 
+cat /etc/hosts || true
+
 function printHelp() {
   cat <<EndOfHelp
 Usage:  bash radargun.sh [arguments]
@@ -121,16 +123,21 @@ function prepareEnv() {
   readonly RADARGUN_DIR_NAME="RadarGun-3.0.0-SNAPSHOT"
   readonly RADARGUN_DIR="$HOME/${RADARGUN_DIR_NAME}"
   readonly RADARGUN_ARCHIVE="${RADARGUN_DIR_NAME}-035c0a2c.zip"
-  readonly RADARGUN_REPORT="${WORKSPACE}/radargun-report"
+  readonly RADARGUN_REPORT="${WORKSPACE}/results"
   readonly RADARGUN_ZIP="/mnt/shared/testsuites/${RADARGUN_ARCHIVE}"
 
   # clean everything but rpms dir
-  find ${WORKSPACE}  -mindepth 1 ! -name 'rpms' -type d -exec rm -rf {} +
+  #find ${WORKSPACE}  -mindepth 1 ! -name 'rpms' -type d -exec rm -rf {} +
   rm -rf $RADARGUN_DIR
 
   unzip -q "$RADARGUN_ZIP" -d "$HOME"
+  pushd "$RADARGUN_DIR/bin"
+    for x in `ls` ; do
+	    sed 's/`hostname`/results/g' -i $x
+    done
+  popd
   
-  mkdir "$RADARGUN_REPORT"
+  mkdir "$RADARGUN_REPORT" || true
 }
 
 function prepareConfig() {
@@ -148,8 +155,10 @@ function prepareConfig() {
   sed -i "s;%{HEAP_SIZE};${HEAP_SIZE};g;" ${CONFIG}
   sed -i "s;%{NUM_THREADS};${NUM_THREADS};g;" ${CONFIG}
   sed -i "s;%{DIST_SYNC_CFG};${DIST_SYNC_CFG};g;" ${CONFIG}
+  sed -i "s;127.0.0.1;results;g;" ${CONFIG}
 
-  CLUSTER_NAME=$( hostname )
+  #CLUSTER_NAME=$( hostname )
+  CLUSTER_NAME=results
   sed -i "s;%{CLUSTER_NAME};${CLUSTER_NAME};g;" ${DIST_SYNC_CFG}
   popd
 
@@ -164,12 +173,13 @@ function run() {
   sudo su -c "sh $SCRIPT_DIR/../memoryProtector.sh memory" &
   for SLAVE in $(seq ${SLAVES}); do
     echo "starting slave [${SLAVE}] ..."
-    JAVA_HOME=${JDK} bash "${RADARGUN_DIR}/bin/slave.sh" -J "${JVM_ARGS}" -m "127.0.0.1:2103"
+    JAVA_HOME=${JDK} bash "${RADARGUN_DIR}/bin/slave.sh" -J "${JVM_ARGS}" -m "results:2103"
   done
   status=0;
   set -x
   echo "starting master ..."
-  JAVA_HOME=${JDK} bash "${RADARGUN_DIR}/bin/master.sh" -J "${JVM_ARGS}" -c "${CONFIG}" -t -w || {
+  sed 's/`hostname`/results/g' -i "${RADARGUN_DIR}/bin/master.sh"
+  JAVA_HOME=${JDK} bash "${RADARGUN_DIR}/bin/master.sh" -J "${JVM_ARGS}" -c "${CONFIG}" -t -w -m results|| {
     status=$?;
     echo "Master exited with non zero $status. Will now continue to gather data (if any) and die later";
   };
diff --git a/jenkins/benchmarks/specjbb.sh b/jenkins/benchmarks/specjbb.sh
index 6766e484..1564372c 100644
--- a/jenkins/benchmarks/specjbb.sh
+++ b/jenkins/benchmarks/specjbb.sh
@@ -60,10 +60,10 @@ readonly JAVA="$( readlink -e '/usr/lib/jvm/java' )/bin/java"
 rm -rf 'SPECjbb2015_1.00'
 unzip "$SPECJBB_ZIP"
 
-rm -rf 'jbb-report'
-mkdir 'jbb-report'
+rm -rf 'results'
+mkdir 'results'
 . $SCRIPT_DIR/../settings-source.sh "${BASH_SOURCE[@]}"
-cd 'jbb-report'
+cd 'results'
 
 rpm -qa > rpms
 sudo su -c "sh $SCRIPT_DIR/memoryProtector.sh memory" &
@@ -85,7 +85,7 @@ MEM_R=$( printf %.0f $(echo "$MEM_85P / 2" | bc -l) )
     MEM_85P=1500
   fi
 MEM_R=${MEM_R}M
-MEM=${MEM_85P}M
+MEM=4096M
 
 ##
 ## Starting the testsuite:
diff --git a/jenkins/benchmarks/specjvm.sh b/jenkins/benchmarks/specjvm.sh
index 60bb85ca..1e3a94f6 100644
--- a/jenkins/benchmarks/specjvm.sh
+++ b/jenkins/benchmarks/specjvm.sh
@@ -75,7 +75,7 @@ tar -xf "$SPECJVM_TAR"
     MEM_90P=1500
   fi
   MEM_R=${MEM_R}M
-  MEM=${MEM_90P}M
+  MEM=4096M
 
   export JAVA_OPTS="-Xms$MEM -Xmx$MEM"
   bash -x ./run-specjvm.sh ${ARGS}
@@ -121,4 +121,4 @@ fi
 
 
 pwd
-ls -lR
+#ls -lR 
diff --git a/jenkins/run-intree-J2DBench-vagrant.sh b/jenkins/run-intree-J2DBench-vagrant.sh
index c784df41..739badba 100644
--- a/jenkins/run-intree-J2DBench-vagrant.sh
+++ b/jenkins/run-intree-J2DBench-vagrant.sh
@@ -93,12 +93,45 @@ function htmlToProps() {
   # graphics.render.tests.shape.fillCubic.geom
 }
 
+#TODO - wget random source from hydra, rename it and add it to RPMS. Rather delete it afterwards. Todo. Jdk17 must use jdk17 sources. So most likley all...
+pushd rpms
+  onlyName=`ls java*`
+  if echo $onlyName | grep java-11-openjdk ; then
+    evilName=java-11-openjdk-jdk.11.0.18.ga-0.ojdk11~upstream~cpu.src.tarxz
+    evilPath=java-11-openjdk/jdk.11.0.18.ga/0.ojdk11~upstream~cpu/src
+  elif echo $onlyName | grep java-1.8.0-openjdk ; then
+    evilName=java-1.8.0-openjdk-jdk8u352.ga-0.ojdk8~upstream~cpu.src.tarxz
+    evilPath=java-1.8.0-openjdk/jdk8u352.ga/0.ojdk8~upstream~cpu/src
+  elif echo $onlyName | grep java-17-openjdk ; then
+    evilName=java-17-openjdk-jdk.17.0.6.ga-0.ojdk17~upstream~cpu.src.tarxz 
+    evilPath=java-17-openjdk/jdk.17.0.6.ga/0.ojdk17~upstream~cpu/src
+  else
+    echo "unknow jdk $onlyName expecte 8,11,17"
+    exit
+  fi     
+  futureSrc=`echo $onlyName | sed "s/x86_64/src/"`
+  fullPathToRemoveInTrap=`pwd`/$futureSrc
+  wget http://hydra.brq.redhat.com:9849/$evilPath/$evilName
+  mv $evilName $futureSrc
+popd
+function removeFakeSource() {
+  rm -v $fullPathToRemoveInTrap 
+}
+trap removeFakeSource  EXIT ERR
+
+echo DISPLAY1=$DISPLAY
+export DISPLAY=:0
+WORKSPACE=`pwd` #needed for jtreg_prep 
+
 source ${SCRIPT_DIR}/../tck/autoruns/common.sh
 source ${SCRIPT_DIR}/jtreg-prep.sh
 source ${SCRIPT_DIR}/../guiTests/testlib.bash #for vnc session and trap
 
+export DISPLAY=:0
 setup # from guiTests/testlib.bash
 
+echo DISPLAY2=$DISPLAY
+export DISPLAY=:0
 genCommonArtifactsPre
 
 # from jtreg-prep.sh
@@ -142,6 +175,7 @@ MEM_90P=$( sh ${SCRIPT_DIR}/benchmarks/calcMemoryPercentage.sh )
 if [ ! "x$OTOOL_heap" == "x" ] ; then
   MEM_90P=$( sh ${SCRIPT_DIR}/benchmarks/calcMemoryPercentage.sh $OTOOL_heap )
 fi
+MEM_90P=4096
 
 sudo su -c "sh $SCRIPT_DIR/benchmarks/memoryProtector.sh memory" &
 rawdata="$PWD/default.res"
@@ -199,7 +233,13 @@ set -xe
 
 cd ${WORKSPACE}
 # print pwd (should be workspace) and list files there
-pwd
-ls -lR
+pwd  || true
+ls -lR || true
+
+rm -rf results
+mkdir results
+mv J2DBench html-diffs results
+
+ls -lR || true
 
 exit $RES
